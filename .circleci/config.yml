version: 2
jobs:
  build:
    machine: true

    working_directory: ~/maci/

    steps:
      - run:
          name: Install Node 11.14.0
          command: |
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm install 11.14.0
            nvm alias default v11
            npm i -g npm
            touch $BASH_ENV
            echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
            echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
            echo 'nvm install v11.14.0' >> $BASH_ENV
            echo 'nvm alias default v11.14.0' >> $BASH_ENV


      - checkout:
          path: ~/maci/

      - restore_cache:
          keys:
            - v1.3-dependencies-{{ checksum "package-lock.json" }}

      - run: 
          name: Install NPM dependencies
          command: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1.3-dependencies-{{ checksum "package-lock.json" }}

      - restore_cache:
          keys:
            - v1.3-dependencies-{{ checksum "contracts/package-lock.json" }}-{{ checksum "circuits/package-lock.json" }}-{{ checksum "config/package-lock.json" }}-{{ checksum "domainobjs/package-lock.json" }}-{{ checksum "cli/package-lock.json" }}-{{ checksum "core/package-lock.json" }}-{{ checksum "integrationTests/package-lock.json" }}--{{ checksum "crypto/package-lock.json" }}

      - run: npm run bootstrap && npm run build

      - save_cache:
          paths:
            - circuits/node_modules
            - cli/node_modules
            - config/node_modules
            - contracts/node_modules
            - crypto/node_modules
            - core/node_modules
            - domainobjs/node_modules
            - integrationTests/node_modules
          key: v1.3-dependencies-{{ checksum "contracts/package-lock.json" }}-{{ checksum "circuits/package-lock.json" }}-{{ checksum "config/package-lock.json" }}-{{ checksum "domainobjs/package-lock.json" }}-{{ checksum "cli/package-lock.json" }}-{{ checksum "core/package-lock.json" }}-{{ checksum "integrationTests/package-lock.json" }}--{{ checksum "crypto/package-lock.json" }}

      #- restore_cache:
          #keys:
            #- v1.2-dependencies-{{ checksum "circuits/scripts/installZkutil.sh" }}

      #- run:
          #name: Install zkutil
          #command: ./circuits/scripts/installZkutil.sh

      #- save_cache:
          #paths:
            #- ~/.cargo/bin/zkutil
          #key: v1.2-dependencies-{{ checksum "circuits/scripts/installZkutil.sh" }}

      - run:
          name: Install solc
          command: wget https://github.com/ethereum/solidity/releases/download/v0.5.16/solc-static-linux && chmod a+x solc-static-linux && sudo mv solc-static-linux /usr/bin/solc

      # run trusted setups
      - run:
          name: Build the batch update state tree snark
          command: cd circuits && NODE_OPTIONS=--max-old-space-size=8192 node build/buildSnarks.js -i circom/prod/batchUpdateStateTreeVerifier.circom -j build/batchUstCircuit.json -p build/batchUstPk.json -v build/batchUstVk.json -s build/BatchUpdateStateTreeVerifier.sol -vs BatchUpdateStateTreeVerifier -m build/batchUst.params && ./scripts/buildBatchUpdateStateTreeSnark.sh

      - run:
          name: Build the quad vote tally snark
          command: cd circuits && NODE_OPTIONS=--max-old-space-size=8192 node build/buildSnarks.js -i circom/prod/quadVoteTally.circom -j build/qvtCircuit.json -p build/qvtPk.bin -v build/qvtVk.json -s build/QuadVoteTallyVerifier.sol -vs QuadVoteTallyVerifier -m build/qvt.params && ./scripts/buildQuadVoteTallySnark.sh

      # cache generated snark circuit and keys
      - save_cache:
          key: v1.2.3-dependencies-{{ checksum "circuits/build/.snark_checksum" }}
          paths:
            - circuits/build/BatchUpdateStateTreeVerifier.sol
            - circuits/build/batchUstCircuit.json
            - circuits/build/batchUstVk.json
            - circuits/build/batchUst.params
            - circuits/build/QuadVoteTallyVerifier.sol
            - circuits/build/qvtCircuit.json
            - circuits/build/qvtVk.json
            - circuits/build/qvt.params

      - run:
          name: Compile contracts
          command: cd contracts && ./scripts/compileSol.sh --native

      - run:
          name: Lint
          command: npm run lint

      - run:
          name: Run crypto tests
          command: cd crypto && npm run test
 
      - run:
          name: Run domainobjs tests
          command: cd domainobjs && npm run test

      - run:
          name: Run core (business logic) tests
          command: cd core && npm run test
          
      - run:
          name: Run circuit tests
          command: cd circuits && ./scripts/runTestsInCircleCi.sh

      - run:
          name: Run contract tests
          command: cd contracts && ./scripts/runTestsInCircleCi.sh

      - run:
          name: Run integration tests
          command: cd integrationTests && ./scripts/runTestsInCircleCi.sh

      - store_artifacts:
          path: circuits/build
