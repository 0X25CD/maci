// SPDX-License-Identifier: MIT
pragma solidity ^0.7.2;

abstract contract MerkleZeros {
    uint256[33] internal zeros;

    // Quinary tree (with SHA256) zeros (Keccack hash of 'Maci')
    constructor() {
        zeros[0] = uint256(8370432830353022751713833565135785980866757267633941821328460903436894336785);
        zeros[1] = uint256(15325010760924867811060011598468731160102892305643597546418886993209427402124);
        zeros[2] = uint256(5333436556486022924864323600267292046975057763731162279859756425998760869639);
        zeros[3] = uint256(16999973853425340038655432712341048036201095179818044319173752107893286041285);
        zeros[4] = uint256(6405818028695086233490078727629837488009526706763577474267757178858770991182);
        zeros[5] = uint256(11858321839390994640730545901968742644435295435852943476956100577601432823602);
        zeros[6] = uint256(18570582782368314799705433245165977918978288658426967081117383935764268020131);
        zeros[7] = uint256(4402289041056863581964816633192406728404340843613152223154851815917670744764);
        zeros[8] = uint256(10376247366293145675508452552697369400944090504232843143639222538824559936070);
        zeros[9] = uint256(14013670558893957780999858437327768695783734488277313849159320990688809424019);
        zeros[10] = uint256(3984041433386868383623371683905877437482906860619437217366721142306818425391);
        zeros[11] = uint256(9312920747063295751215099489876158290198586856498263984929312288583754428932);
        zeros[12] = uint256(18101820096895132542478946102093375992435636207131355464001863766429535812284);
        zeros[13] = uint256(13240271019727216262693238371961573026453585412121541011647327719142195625218);
        zeros[14] = uint256(20990896966625822850958554581854624351908368576740245646211836469603081961371);
        zeros[15] = uint256(6015787844373193851328378275751862837442881615317536995079328672838157555174);
        zeros[16] = uint256(797084603812080919042033206721364716867027226976562488889156680282526343032);
        zeros[17] = uint256(19100643505440767313945041927066523392404318906271740631872711272170442865703);
        zeros[18] = uint256(21391351546111813418279136120919665156818600960909112461591488185549594624379);
        zeros[19] = uint256(7854051224518409491797458148543686944610250560122195446051377315117716931403);
        zeros[20] = uint256(21784837548230573991080598374650406775885165061041699844640408190147327496041);
        zeros[21] = uint256(8985056759566301826561094063607252635283046669354296739631167845986227066607);
        zeros[22] = uint256(12461644223097405340326734262007025861876328183702431216701456302566167722433);
        zeros[23] = uint256(12443223649876625707179696138908055218594327588428111400857162461071666724193);
        zeros[24] = uint256(10905562525942249841328176427604675932465010975002959606187466883039165725137);
        zeros[25] = uint256(19386190863934460427563818666024669047127034945916884784303204507478803507652);
        zeros[26] = uint256(13579301159176452414598960006941954365533043652088450184248479930757017210551);
        zeros[27] = uint256(5617662864438150502464313306314829658606507185133798142376953448769311512394);
        zeros[28] = uint256(15305978460493825127112648905319267619479831803815890676635845191665316027285);
        zeros[29] = uint256(15485391819730191716288149047391947955424531028942897463311643339369714400577);
        zeros[30] = uint256(9553120986200706878525532928651354615177617015053845713628392610676132479216);
        zeros[31] = uint256(20379594582709797805455065804019715930288768297325290882082695412045373432882);
        zeros[32] = uint256(17686039260680947988031741758329479975912818339366819301077225277258413066815);
    }
}

