jest.setTimeout(90000)
import { deployVerifier } from '../'
import { G1Point, G2Point } from 'maci-crypto'
import { VerifyingKey } from 'maci-domainobjs'

const vk = new VerifyingKey(
    new G1Point(
        BigInt('20491192805390485299153009773594534940189261866228447918068658471970481763042'),
        BigInt('9383485363053290200918347156157836566562967994039712273449902621266178545958'),
    ),
    new G2Point(
        [
            BigInt('6375614351688725206403948262868962793625744043794305715222011528459656738731'),
            BigInt('4252822878758300859123897981450591353533073413197771768651442665752259397132'),
        ], 
        [
            BigInt('10505242626370262277552901082094356697409835680220590971873171140371331206856'),
            BigInt('21847035105528745403288232691147584728191162732299865338377159692350059136679'),
        ],
    ),
    new G2Point(
        [
            BigInt('10857046999023057135944570762232829481370756359578518086990519993285655852781'),
            BigInt('11559732032986387107991004021392285783925812861821192530917403151452391805634'),
        ], 
        [
            BigInt('8495653923123431417604973247489272438418190587263600148770280649306958101930'),
            BigInt('4082367875863433681332203403145435568316851327593401208105741076214120093531'),
        ],
    ),
    new G2Point(
        [
            BigInt('19316071393769631071739466808924557575370046223156790236472688098546713485164'),
            BigInt('11700261708411360112482712242528551130212577267248363110777096731569359533937'),
        ], 
        [
            BigInt('19027224119116513453619472056165183919393637553270616301189593772848351986009'),
            BigInt('8314809347259847850803251217663255270167988731493310587391546796826904220459'),
        ],
    ),
    [
        new G1Point(
            BigInt('8475939680648083280638846051497134319487781451783634569144849229381887869470'),
            BigInt('15777387922383777864128245075158682837173769163333646572506201314277694741524'),
        ),
        new G1Point(
            BigInt('6307974476057044946223853054915497058693993784049217695740696374670315278450'),
            BigInt('19541766564091333476121980691242907000813131822237920987048117031710761017707'),
        ),
    ],
)

const proof = [
    "8138843535936876022147498638638735443559098802037123668562067688410712040659",
    "20254518333590456980127539391158465797849308512461320798339394497756066083127",

    "4172091121390498015103514556796648479109772416264147772742881871743256113392",
    "14675978909236306520284037569979142343795231513267880228418269953765632114866",

    "9526107801837105119536355027282417555439018693387487422508959691071515843914",
    "3647408326358145407881537451305564064228833949173209586428334781203690478673",

    "21401811877975210733205852370698869251985932624651064936228149884513518139307",
    "21831425028923537040256831964188084390619174575683456422803974268927451187827",
]

const publicInputs = [
    "410091774963068867201803408950560054115828777557537631567991323063179922093"
]

describe('DomainObjs', () => {

    let verifierContract
    describe('Deployment', () => {
        beforeAll(async () => {

            console.log('Deploying Verifier')

            verifierContract = await deployVerifier()
        })

        it('should correctly verify a proof', async () => {
            const tx = await verifierContract.verify(
                proof,
                vk,
                publicInputs[0],
                { gasLimit: 1000000 }
            )
            const receipt = await tx.wait()
            console.log(receipt.gasUsed())
        })
    })
})
